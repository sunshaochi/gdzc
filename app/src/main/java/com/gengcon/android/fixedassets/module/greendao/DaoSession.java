package com.gengcon.android.fixedassets.module.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.gengcon.android.fixedassets.module.greendao.AssetBean;
import com.gengcon.android.fixedassets.module.greendao.InventoryBean;

import com.gengcon.android.fixedassets.module.greendao.AssetBeanDao;
import com.gengcon.android.fixedassets.module.greendao.InventoryBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig assetBeanDaoConfig;
    private final DaoConfig inventoryBeanDaoConfig;

    private final AssetBeanDao assetBeanDao;
    private final InventoryBeanDao inventoryBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        assetBeanDaoConfig = daoConfigMap.get(AssetBeanDao.class).clone();
        assetBeanDaoConfig.initIdentityScope(type);

        inventoryBeanDaoConfig = daoConfigMap.get(InventoryBeanDao.class).clone();
        inventoryBeanDaoConfig.initIdentityScope(type);

        assetBeanDao = new AssetBeanDao(assetBeanDaoConfig, this);
        inventoryBeanDao = new InventoryBeanDao(inventoryBeanDaoConfig, this);

        registerDao(AssetBean.class, assetBeanDao);
        registerDao(InventoryBean.class, inventoryBeanDao);
    }
    
    public void clear() {
        assetBeanDaoConfig.clearIdentityScope();
        inventoryBeanDaoConfig.clearIdentityScope();
    }

    public AssetBeanDao getAssetBeanDao() {
        return assetBeanDao;
    }

    public InventoryBeanDao getInventoryBeanDao() {
        return inventoryBeanDao;
    }

}
